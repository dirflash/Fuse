name: fuse-manager

# Controls when the action will run. Triggers the workflow on push request, or repository dispatch
on:
  repository_dispatch:
    types: [FUSE_Run]
jobs:
  build:
    name: Run fuse-mgr.py
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment: fuse_env
    steps:
      - name: repository dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets. PAT }}
          repository: dirflash/Fuse
          event-type: FUSE-event
          client-payload: '{"attachment": ${{ attachment }}, "room_id": "${{ room_id }}", "room_type": "${{ room_type }}", "person_id": "${{ person_id }}", "person_email": "${{ person_email }}"}'
      - name: checkout repo content
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0
      - name: setup cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('fuse.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade requests
          pip install --upgrade dnspython
          pip install --upgrade pymongo
          pip install --upgrade certifi
          pip install -r requirements.txt
          if [ -f requirements.txt ]; then pip install --upgrade --upgrade-strategy eager -r requirements.txt; fi
      - name: execute py script # run file
        env:
          webex_bearer: ${{ secrets.WEBEX_BEARER }}
          attachment: ${{ attachment }}
          room_id: ${{ room_id }}
          room_type: ${{ room_type }}
          person_id: ${{ person_id }}
          person_email: ${{ person_email }}
        run: |
          python fuse-mgr.py